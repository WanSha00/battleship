(()=>{"use strict";const e=document.querySelector("#gamesboard-container"),t=10;function o(o,n){let s;s="player"===n?"PLAYER":"COMPUTER";const r=document.createElement("div");r.classList.add("board");const a=document.createElement("div");a.classList.add("board-title");const l=document.createElement("div");l.textContent=s;const c=document.createElement("div");c.classList.add("game-board"),c.style.backgroundColor=o,c.id=n;for(let e=0;e<t*t;e++){const t=document.createElement("div");t.classList.add("block"),t.id=e,c.append(t)}a.append(l),r.append(a),r.append(c),e.append(r)}function n(e,o,n,s){let r,a=o?n<=t*t-s.length?n:t*t-s.length:n<=t*t-t*s.length?n:n-s.length*t+t,l=[];for(let n=0;n<s.length;n++)o?l.push(e[Number(a)+n]):l.push(e[Number(a)+n*t]);o?l.every(((e,o)=>r=l[0].id%t!=t-(l.length-(o+1)))):l.every(((e,o)=>r=l[0].id<t*o+1+90));const c=l.every((e=>!e.classList.contains("taken")));return{shipBlocks:l,valid:r,notTaken:c}}function s(e,t){let o=!1;return e.forEach((e=>{e===t&&(o=!0)})),o}const r=document.querySelector(".option-container"),a=document.querySelector("#flip-button"),l=document.querySelector("#start-button"),c=document.querySelector("#info-display"),i=document.querySelector("#turn-display"),u=document.querySelector(".setup");let d=[],p=0;a.addEventListener("click",(function(){const e=Array.from(r.children);p=0===p?90:0,e.forEach((e=>e.style.transform=`rotate(${p}deg)`))}));const m=10;o("hsl(200, 100%, 50%)","player"),o("hsl(200, 100%, 40%","computer");class h{constructor(e,t){this.name=e,this.length=t}}const f=[new h("destroyer",2),new h("submarine",3),new h("cruiser",3),new h("battleship",4),new h("carrier",5)];let y,C;function g(e,t,o){if(!1===s(d,t)){console.log("current user : "+e);const s=document.querySelectorAll(`#${e} div`);let r=Math.random()<.5,a="player"===e?0===p:r,l=Math.floor(Math.random()*m*m),c=o||l;const{shipBlocks:i,valid:u,notTaken:d}=n(s,a,c,t);u&&d?(i.forEach((e=>{e.classList.add(t.name),e.classList.add("taken")})),console.log("add "+t.name+" to "+e)):(console.log("block not valid for user: "+e),"computer"===e?(console.log("retry add "+t.name+" for computer"),g(e,t)):y=!0)}}function L(e){y=!1,C=e.target}function v(e){e.preventDefault();const t=f[C.id];!function(e,t){if(!1===s(d,t)){const o=document.querySelectorAll("#player div");let s=0===p;const{shipBlocks:r,valid:a,notTaken:l}=n(o,s,e,t);a&&l&&r.forEach((e=>{e.classList.add("hover"),setTimeout((()=>e.classList.remove("hover")),500)}))}}(e.target.id,t)}function k(e){const t=e.target.id,o=f[C.id];g("player",o,t),y||(C.remove(),d.push(o))}f.forEach((e=>g("computer",e))),Array.from(r.children).forEach((e=>{e.addEventListener("dragstart",L)})),document.querySelectorAll("#player div").forEach((e=>{e.addEventListener("dragover",v),e.addEventListener("drop",k)}));let E,b=!1;l.addEventListener("click",(function(){if(console.log("start"),void 0===E)if(0!=r.children.length)console.log("please place all ships"),c.textContent="Please place all your ships on the PLAYER board.";else{u.style.display="none",l.style.display="none";const e=document.querySelector(".player-ships-info"),t=document.querySelector(".cpu-ships-info");e.textContent="Player's ships: Destroyer | Submarine | Cruiser | Battleship | Carrier",t.textContent="Computer's ships: Destroyer | Submarine | Cruiser | Battleship | Carrier",document.querySelectorAll("#computer div").forEach((e=>e.addEventListener("click",T))),E=!0,i.textContent="PLAYER's turn",c.textContent="You are attacking...."}}));let S=[],x=[];const q=[],A=[];function T(e){if(!b){if(e.target.classList.contains("taken")&&!e.target.classList.contains("boom")){e.target.classList.add("boom"),c.textContent="You HIT a ship!";let t=Array.from(e.target.classList);t=t.filter((e=>"block"!=e)),t=t.filter((e=>"boom"!=e)),t=t.filter((e=>"taken"!=e)),S.push(...t),D("player",S,q)}else e.target.classList.contains("taken")?(e.target.classList.contains("taken")&&e.target.classList.contains("boom")||e.target.classList.contains("miss"))&&(c.textContent="You attacked the same spot. You wasted your turn!"):(c.textContent="You MISSED!",e.target.classList.add("miss"));E=!1,document.querySelectorAll("#computer div").forEach((e=>e.removeEventListener("click",T))),setTimeout(Y,2e3)}}function Y(){b||(i.textContent="COMPUTER's turn",c.textContent="Computer is attacking....",setTimeout((()=>{let e=Math.floor(Math.random()*m*m);const t=document.querySelectorAll("#player div");if(t[e].classList.contains("taken")&&t[e].classList.contains("boom"))Y();else if(t[e].classList.contains("taken")&&!t[e].classList.contains("boom")){t[e].classList.add("boom"),c.textContent="The computer HIT your ship!";let o=Array.from(t[e].classList);o=o.filter((e=>"block"!=e)),o=o.filter((e=>"boom"!=e)),o=o.filter((e=>"taken"!=e)),x.push(...o),D("computer",x,A)}else c.textContent="The computer MISSED!",t[e].classList.add("miss")}),2e3),setTimeout((()=>{E=!0,i.textContent="PLAYER's turn",c.textContent="You are attacking....",document.querySelectorAll("#computer div").forEach((e=>e.addEventListener("click",T)))}),4e3))}const P=document.querySelector(".player-ships-info"),U=document.querySelector(".cpu-ships-info");let M=["Destroyer","Submarine","Cruiser","Battleship","Carrier"],B=["Destroyer","Submarine","Cruiser","Battleship","Carrier"];function D(e,t,o){function n(n,s){if(t.filter((e=>e===n)).length===s){if("player"===e){c.textContent=`The player SUNK the computer's ${n.toUpperCase()}!`;let e="";for(let t=0;t<M.length;t++)if(void 0!==M[t]){let o=!1;M[t].toUpperCase()===n.toUpperCase()&&(o=!0,delete M[t]),o||(e+=M[t]+" | ")}U.textContent="Computer ships: "+e,S=t.filter((e=>e!==n))}if("computer"===e){c.textContent=`The computer SUNK the player's ${n.toUpperCase()}!`;let e="";for(let t=0;t<B.length;t++)if(void 0!==B[t]){let o=!1;B[t].toUpperCase()===n.toUpperCase()&&(o=!0,delete B[t]),o||(e+=B[t]+" | ")}P.textContent="Player ships: "+e,x=t.filter((e=>e!==n))}o.push(n)}}n("destroyer",2),n("submarine",3),n("cruiser",3),n("battleship",4),n("carrier",5),console.log("player sunked ships "+q),console.log("cpu sunked ships "+A),5===q.length&&(c.textContent="You have sunk all the computer's ship. You WON!!",b=!0),5===A.length&&(c.textContent="Computer has sunk all the player's ship. You LOSE!!",b=!0)}c.textContent="Please place all your ships on the PLAYER board."})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,